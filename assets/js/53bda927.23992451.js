"use strict";(self.webpackChunktik_wiki=self.webpackChunktik_wiki||[]).push([[6278],{8451:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"microservice/connsensus/raft","title":"\ud83d\ude80 What is Raft Consensus?","description":"Raft is a consensus algorithm used in distributed systems to make a cluster of servers agree on a single sequence of operations (a log).","source":"@site/docs/microservice/connsensus/raft.md","sourceDirName":"microservice/connsensus","slug":"/microservice/connsensus/raft","permalink":"/docs/microservice/connsensus/raft","draft":false,"unlisted":false,"editUrl":"https://github.com/TikTzuki/tiktzuki.github.io/tree/master/docs/microservice/connsensus/raft.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docSidebar","previous":{"title":"Fundamentals","permalink":"/docs/fundamentals"},"next":{"title":"MPC-based Crypto-Custody Design (Rust) \u2014 SSD","permalink":"/docs/microservice/mpc/MPC-Rust"}}');var t=n(4848),i=n(8453);const l={},o="\ud83d\ude80 What is Raft Consensus?",a={},d=[{value:"1. <strong>Leader Election</strong>",id:"1-leader-election",level:3},{value:"2. <strong>Log Replication</strong>",id:"2-log-replication",level:3},{value:"3. <strong>Safety Rules</strong>",id:"3-safety-rules",level:3}];function c(e){const s={code:"code",h1:"h1",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"-what-is-raft-consensus",children:"\ud83d\ude80 What is Raft Consensus?"})}),"\n",(0,t.jsxs)(s.p,{children:["Raft is a ",(0,t.jsx)(s.strong,{children:"consensus algorithm"})," used in distributed systems to make a cluster of servers agree on a single sequence of operations (a log)."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Imagine you have ",(0,t.jsx)(s.strong,{children:"5 servers"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"They must all agree on the same log of events"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"\n[SET x=1] \u2192 [SET y=3] \u2192 [DEL x]\n\n"})}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Even if some servers crash or messages get lost, Raft ensures that:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"All surviving servers eventually agree on the same log."}),"\n",(0,t.jsx)(s.li,{children:"The log is applied in the same order everywhere."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["This makes Raft ideal for ",(0,t.jsx)(s.strong,{children:"databases, blockchain, and distributed systems"}),"."]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h1,{id:"\ufe0f-why-consensus-is-hard",children:"\u2696\ufe0f Why Consensus Is Hard"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Network messages can be delayed, reordered, or lost."}),"\n",(0,t.jsx)(s.li,{children:"Servers can crash and restart."}),"\n",(0,t.jsx)(s.li,{children:'Without consensus, two servers might think they are the "truth," leading to data divergence.'}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Raft solves this by electing ",(0,t.jsx)(s.strong,{children:"one leader"})," and having all followers trust it."]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h1,{id:"\ufe0f-the-core-ideas-of-raft",children:"\ud83c\udfd7\ufe0f The Core Ideas of Raft"}),"\n",(0,t.jsxs)(s.h3,{id:"1-leader-election",children:["1. ",(0,t.jsx)(s.strong,{children:"Leader Election"})]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["At any time, one server is the ",(0,t.jsx)(s.strong,{children:"leader"}),", others are ",(0,t.jsx)(s.strong,{children:"followers"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:["Followers start an ",(0,t.jsx)(s.strong,{children:"election"})," if they don\u2019t hear from a leader within a timeout."]}),"\n",(0,t.jsx)(s.li,{children:"Votes are requested; the one with the majority becomes leader."}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Guarantee:"})," only one leader at a time."]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(s.h3,{id:"2-log-replication",children:["2. ",(0,t.jsx)(s.strong,{children:"Log Replication"})]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Clients send requests (commands) to the leader."}),"\n",(0,t.jsxs)(s.li,{children:["The leader ",(0,t.jsx)(s.strong,{children:"appends"})," the command to its log and replicates it to followers."]}),"\n",(0,t.jsxs)(s.li,{children:["Once a majority acknowledges, the leader ",(0,t.jsx)(s.strong,{children:"commits"})," the entry."]}),"\n",(0,t.jsx)(s.li,{children:"Followers also commit that entry."}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["\u2705 This ensures that all nodes eventually have the ",(0,t.jsx)(s.strong,{children:"same ordered log"}),"."]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(s.h3,{id:"3-safety-rules",children:["3. ",(0,t.jsx)(s.strong,{children:"Safety Rules"})]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Election restriction:"})," Candidates must have the latest log to win leadership."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Log matching:"})," If two logs have an entry at the same index and term, they\u2019re identical before that point."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Commitment:"})," Only entries known by a majority are committed."]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h1,{id:"-raft-states",children:"\ud83d\udd04 Raft States"}),"\n",(0,t.jsx)(s.p,{children:"Each server cycles between 3 roles:"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Follower"})," \u2192 passive, just waits for leader\u2019s messages."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Candidate"})," \u2192 requests votes during election."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Leader"})," \u2192 handles client requests, replicates logs."]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h1,{id:"-timeline-example",children:"\ud83d\udcca Timeline Example"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:'Initial state: 5 servers, no leader\n\u2193\nTimeout (no heartbeat received)\n\u2193\nOne follower becomes Candidate, requests votes\n\u2193\nMajority vote \u2192 Leader elected\n\u2193\nClient: "SET x=10"\n\u2193\nLeader appends log [SET x=10], replicates to followers\n\u2193\nMajority responds OK \u2192 Leader commits entry\n\u2193\nFollowers commit entry \u2192 State is consistent\n'})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h1,{id:"\ufe0f-where-raft-is-used",children:"\ud83d\udee0\ufe0f Where Raft Is Used"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"etcd"})," (Kubernetes metadata store)"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Consul"})," (HashiCorp service discovery)"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"TiKV"})," (Rust-based distributed KV store, uses raft-rs)"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Databend"})," (uses openraft)"]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h1,{id:"-key-takeaways",children:"\ud83c\udfaf Key Takeaways"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Raft = ",(0,t.jsx)(s.strong,{children:"Consensus via Leadership"}),"."]}),"\n",(0,t.jsx)(s.li,{children:"Only leader talks to clients."}),"\n",(0,t.jsx)(s.li,{children:"Majority (quorum) ensures fault tolerance."}),"\n",(0,t.jsx)(s.li,{children:"Handles crashes, restarts, partitions."}),"\n",(0,t.jsx)(s.li,{children:"Simpler than Paxos, but equally powerful."}),"\n"]}),"\n",(0,t.jsx)(s.hr,{})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>o});var r=n(6540);const t={},i=r.createContext(t);function l(e){const s=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(i.Provider,{value:s},e.children)}}}]);